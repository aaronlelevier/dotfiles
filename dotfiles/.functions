# pull master, rebase with feature branch and push
pullandpush () {
    if [ $# -eq 0 ]
    then
        echo "branch name not specified"
    else
        branch=$1
        git checkout master
        git pull --rebase
        git checkout $branch
        git rebase origin/master
        git push -u origin --force-with-lease $branch
    fi
}

# create a backup of a given database
backupdb () {
    if [ $# -eq 0 ]
    then
        echo "db_name not specified"
    else
        db_name=$1
        db_name_copy=${db_name}_copy
        psql -c "DROP DATABASE $db_name_copy;"
        psql -c "CREATE DATABASE $db_name_copy WITH TEMPLATE $db_name;"
    fi
}

# restore database from a given backup
restoredb () {
    if [ $# -eq 0 ]
    then
        echo "db_name not specified"
    else
        db_name=$1
        db_name_copy=${db_name}_copy
        psql -c "DROP DATABASE $db_name;"
        psql -c "CREATE DATABASE $db_name WITH TEMPLATE $db_name_copy;"
    fi
}

# checks a Makefile
check_makefile() {
    cat -e -t -v $1
}

add_gen_server() {
    if [ $# -eq 0 ]
    then
        echo "filename not specified"
    else
        curl "https://raw.githubusercontent.com/aaronlelevier/jaerlang2-code/master/code/gen_server_template.full" > $1
    fi
}

gittag () {
    if [ $# -ne 1 ] ; then
        echo "Need one argument, a git tag." 1>&2
    else
        tag="$1"
        git tag -a "$tag" -m "$tag"
        git push origin "$tag"
    fi
}

gitFilesChanged() {
    if ! git diff-index --quiet --cached HEAD; then
        # Index has changes.
        echo 1;
    elif ! git diff-files --quiet; then
        # Working tree has changes.
        echo 1;
    elif [ -n "`git ls-files --others --exclude-standard`" ]; then
        # There are untracked unignored files.
        echo 1;
    else
        # not git changes
        echo 0;
    fi
}

showtags () { git for-each-ref --sort='-*authordate' --format="%(refname:short) %(taggerdate) %(subject) %(body)" refs/tags | head -20; }

add_python_gitignore() {
    curl https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore >> .gitignore
}
